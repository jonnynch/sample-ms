replicaCount: 1

image:
  repository: "@@image.repository@@"
  pullPolicy: Always
  tag: "@@image.version@@"
imagePullSecrets:
  - name: regcred
nameOverride: "sample-ms"
fullnameOverride: "sample-ms"

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: "nginx"
  tls:
    - hosts:
        - sample.@@namespace@@.localdev.me
      secretName: ingress
  hosts:
    - host: sample.@@namespace@@.localdev.me
      paths:
        - path: /
          pathType: ImplementationSpecific
resources:
  limits:
    cpu: 1000m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 512Mi

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70
podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/path: '/actuator/prometheus'
  prometheus.io/port: '8080'

env:
  - name: SPRING_PROFILES_ACTIVE
    value: pgsql,zipkin
  - name: ZIPKIN_HOST
    value: zipkin.monitoring.svc
  - name: DB_HOST
    value: appdb
  - name: DB_NAME
    value: appdb
  - name: DB_USER
    valueFrom:
      secretKeyRef:
        key: username
        name: appdb-owner-user.appdb.credentials.postgresql.acid.zalan.do
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        key: password
        name: appdb-owner-user.appdb.credentials.postgresql.acid.zalan.do